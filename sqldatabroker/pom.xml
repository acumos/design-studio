<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <!--
	===============LICENSE_START=======================================================
	Acumos
	===================================================================================
	Copyright (C) 2017 AT&T Intellectual Property & Tech Mahindra. All rights reserved.
	===================================================================================
	This Acumos software file is distributed by AT&T and Tech Mahindra
	under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	http://www.apache.org/licenses/LICENSE-2.0
	
	This file is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	===============LICENSE_END=========================================================
	-->
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.acumos.design-studio</groupId>
  <artifactId>sqldatabroker</artifactId>
  <version>1.2.0-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>Design Studio SQL Databroker </name>

  <parent>
	<groupId>org.springframework.boot</groupId>
	<artifactId>spring-boot-starter-parent</artifactId>
	<version>2.1.1.RELEASE</version>
	<!-- silence warning about parent relative path -->
  	<relativePath />
  </parent>
  
  <properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<!-- Stand-alone RESTFul application -->
		<start-class>org.acumos.sqldatabroker.SQLDatabrokerApplication</start-class>
		<!-- Jenkins invokes mvn with argument -Dbuild.number=${BUILD_NUMBER} -->
		<build.number>0</build.number>
		<!-- Not supplied to all jobs; e.g., Javadoc -->
		<docker.pull.registry>nexus3.acumos.org:10001</docker.pull.registry>
		<!-- Supplied by Jenkins -->
		<docker.push.registry>${env.NEXUS3_PUSH_REGISTRY}</docker.push.registry>
	</properties>
	
	

  <dependencies>
    <dependency>
		<!-- Dependencies for SLF4J Loggers Starts -->
		<groupId>org.slf4j</groupId>
		<artifactId>slf4j-api</artifactId>
		<version>1.7.7</version>
	</dependency>

	<dependency>
		<groupId>ch.qos.logback</groupId>
		<artifactId>logback-classic</artifactId>
		<!-- Spring chooses <version>${logback.version}</version> -->
	</dependency>

	<dependency>
		<groupId>ch.qos.logback</groupId>
		<artifactId>logback-core</artifactId>
		<!-- Spring chooses <version>${logback.version}</version> -->
	</dependency>

	<dependency>
		<!-- Setup Spring Boot -->
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter</artifactId>
	</dependency>

	<dependency>
		<!-- Setup Spring MVC & REST, use Embedded Tomcat -->
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-web</artifactId>
	</dependency>

	<dependency>
		<groupId>io.springfox</groupId>
		<artifactId>springfox-swagger2</artifactId>
		<version>2.6.1</version>
	</dependency>

	<dependency>
		<groupId>io.springfox</groupId>
		<artifactId>springfox-swagger-ui</artifactId>
		<version>2.6.1</version>
	</dependency>

	<!-- Test dependencies -->
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-test</artifactId>
		<scope>test</scope>
	</dependency>

	<dependency>
		<groupId>junit</groupId>
		<artifactId>junit</artifactId>
		<!-- Spring sets the <version>4.11</version> -->
		<scope>test</scope>
	</dependency>
	
	<dependency>
		<groupId>com.google.code.gson</groupId>
		<artifactId>gson</artifactId>
	</dependency>

	<dependency>
		<groupId>org.everit.json</groupId>
		<artifactId>org.everit.json.schema</artifactId>
		<version>1.0.0</version>
	</dependency>

	<dependency>
		<groupId>org.jolokia</groupId>
		<artifactId>jolokia-core</artifactId>
	</dependency>

	<!-- https://mvnrepository.com/artifact/javax.ws.rs/javax.ws.rs-api -->
	<!-- For reading and executing file on remote server -->
	<dependency>
		<groupId>javax.ws.rs</groupId>
		<artifactId>javax.ws.rs-api</artifactId>
		<version>2.0</version>
	</dependency>

	<dependency>
		<groupId>com.jcraft</groupId>
		<artifactId>jsch</artifactId>
		<version>0.1.53</version>
	</dependency>
	
	<!-- For Dynamic protobuf message construction -->
	<dependency>
    		<groupId>com.google.protobuf</groupId>
    		<artifactId>protobuf-java</artifactId>
    		<version>3.3.1</version>
		</dependency>
		
		<dependency>
  			<groupId>com.github.os72</groupId>
 			<artifactId>protobuf-dynamic</artifactId>
 			<version>0.9.4</version>
        </dependency>
        <!-- MariaDB database driver  -->
                <!-- https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client -->
		<dependency>
			<groupId>org.mariadb.jdbc</groupId>
			<artifactId>mariadb-java-client</artifactId>
			<version>2.3.0</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/commons-dbcp/commons-dbcp -->
		<dependency>
		    <groupId>commons-dbcp</groupId>
		    <artifactId>commons-dbcp</artifactId>
		    <!-- <version>1.4</version> -->
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/commons-pool/commons-pool -->
		<dependency>
		    <groupId>commons-pool</groupId>
		    <artifactId>commons-pool</artifactId>
		    <!-- <version>1.4</version> -->
		</dependency>
  </dependencies>
  <build>
	<resources>
		<resource>
			<directory>src/main/resources</directory>
		</resource>
	</resources>
	<plugins>
		<plugin>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>license-maven-plugin</artifactId>
			<version>1.14</version>
			<configuration>
				<licenseName>acumos</licenseName>
				<licenseResolver>${project.baseUri}/src/license</licenseResolver>
				<addJavaLicenseAfterPackage>false</addJavaLicenseAfterPackage>
				<processStartTag>===============LICENSE_START=======================================================</processStartTag>
				<processEndTag>===============LICENSE_END=========================================================</processEndTag>
				<sectionDelimiter>===================================================================================</sectionDelimiter>
				<inceptionYear>2017</inceptionYear>
				<organizationName><![CDATA[AT&T Intellectual Property & Tech Mahindra. All rights reserved.]]></organizationName>
				<projectName>Acumos</projectName>
				<canUpdateCopyright>true</canUpdateCopyright>
				<canUpdateDescription>true</canUpdateDescription>
				<canUpdateLicense>true</canUpdateLicense>
				<emptyLineAfterHeader>true</emptyLineAfterHeader>
			</configuration>
		</plugin>
		<!-- Require Java 1.8 -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
			<configuration>
				<source>1.8</source>
				<target>1.8</target>
			</configuration>
		</plugin>
		<!-- add build information to manifest -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-jar-plugin</artifactId>
			<!-- parent sets version 2.5 -->
			<configuration>
				<archive>
					<manifest>
						<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
					</manifest>
					<manifestEntries>
						<Build-Number>${project.version}.${build.number}</Build-Number>
						<Build-Time>${maven.build.timestamp}</Build-Time>
					</manifestEntries>
				</archive>
			</configuration>
		</plugin>
		<!-- Build a single jar with all dependencies -->
		<plugin>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-maven-plugin</artifactId>
			<executions>
				<execution>
					<goals>
						<goal>repackage</goal>
					</goals>
				</execution>
			</executions>
		</plugin>
		<!-- deploy-jar-to-nexus -->
		<plugin>
			<artifactId>maven-deploy-plugin</artifactId>
			<!-- Spring sets the <version>2.8</version> -->
			<configuration>
				<skip>true</skip>
			</configuration>
		</plugin>
		<plugin>
			<groupId>org.jacoco</groupId>
			<artifactId>jacoco-maven-plugin</artifactId>
			<version>0.7.9</version>
			<executions>
				<execution>
					<id>default-prepare-agent</id>
					<goals>
						<goal>prepare-agent</goal>
					</goals>
				</execution>
				<execution>
					<id>default-report</id>
					<phase>prepare-package</phase>
					<goals>
						<goal>report</goal>
					</goals>
				</execution>
			</executions>
		</plugin>
		<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.21.0</version>
				<configuration>
					<verbose>true</verbose>
					<!-- docker runs on the LF build minion so the default value is ok -->
					<!-- LF <dockerHost>unix:///var/run/docker.sock</dockerHost> LF -->
					<pullRegistry>${docker.pull.registry}</pullRegistry>
					<pushRegistry>${docker.push.registry}</pushRegistry>
					<!-- LF credentials are not supplied here -->
					<images>
						<image>
							<!-- Specify a tag to avoid default tag "latest" -->
							<name>${project.artifactId}:${project.version}</name>
							<build>
								<!-- This is the same FROM used in a Dockerfile -->
								<from>openjdk:8-jdk</from>
								<tags>
									<!-- Add tag with build number -->
									<tag>${project.version}-b${build.number}</tag>
								</tags>
								<assembly>
									<inline>
										<files>
											<file>
												<source>target/${project.artifactId}-${project.version}.${project.packaging}</source>
												<outputDirectory />
											</file>
										</files>
									</inline>
								</assembly>
								
								<!-- This is the same CMD used in a Dockerfile -->
								<cmd>
									<!-- CDATA prevents Eclipse formatter from breaking line -->
									<shell><![CDATA[cd /maven; java -Xms128m -Xmx512m -Djava.security.egd=file:/dev/./urandom -jar ${project.artifactId}-${project.version}.${project.packaging}]]></shell>
								</cmd>
							</build>
						</image>
					</images>
				</configuration>
				<!-- build Docker images in install phase, push in deploy phase -->
				<executions>
					<execution>
						<goals>
							<goal>build</goal>
							<goal>push</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		
	</plugins>
  </build>
  <!-- No distributionManagement section, jars are not deployed -->
</project>
